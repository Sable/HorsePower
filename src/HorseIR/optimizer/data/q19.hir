module default{
  import Builtin.*;
  def main() : table{
    t0:? = @load_table(`part:sym);
    t1:i64 = check_cast(@column_value(t0,`p_partkey:sym), i64);
    t4:sym = check_cast(@column_value(t0,`p_brand:sym), sym);
    t6:i64 = check_cast(@column_value(t0,`p_size:sym), i64);
    t7:sym = check_cast(@column_value(t0,`p_container:sym), sym);
    t10:? = @load_table(`lineitem:sym);
    t12:i64 = check_cast(@column_value(t10,`l_partkey:sym), i64);
    t15:f64 = check_cast(@column_value(t10,`l_quantity:sym), f64);
    t16:f64 = check_cast(@column_value(t10,`l_extendedprice:sym), f64);
    t17:f64 = check_cast(@column_value(t10,`l_discount:sym), f64);
    t24:sym = check_cast(@column_value(t10,`l_shipinstruct:sym), sym);
    t25:sym = check_cast(@column_value(t10,`l_shipmode:sym), sym);
    t27:? = `"AIR"`"AIR REG":sym;
    t28:? = @member(t27,t25);                  // l_shipmode
    t29:? = @eq(t24,`"DELIVER IN PERSON":sym); // l_shipinstruct
    t30:? = @and(t29,t28);
    t32:? = @compress(t30,t12);
    t35:? = @compress(t30,t15);
    t36:? = @compress(t30,t16);
    t37:? = @compress(t30,t17);
    t47:? = @geq(t6,1:i64);
    t48:? = @leq(t6,5:i64);
    t49:? = @and(t47,t48);
    t50:? = @eq(t4,`"Brand#12":sym);          // p_brand
    t51:? = `"SM CASE"`"SM BOX"`"SM PACK"`"SM PKG":sym;
    t52:? = @member(t51,t7);                  // p_container
    t53:? = @geq(t35,1:f64);
    t54:? = @leq(t35,11:f64);
    t55:? = @and(t49,t50);
    t56:? = @and(t55,t52);  // <-t52
    t57:? = @and(t53,t54);
    t58:? = @geq(t6,1:i64);
    t59:? = @leq(t6,10:i64);
    t60:? = @and(t58,t59);
    t61:? = @eq(t4,`"Brand#23":sym);
    t62:? = `"MED BAG"`"MED BOX"`"MED PKG"`"MED PACK":sym;
    t63:? = @member(t62,t7);
    t64:? = @geq(t35,10:f64);
    t65:? = @leq(t35,20:f64);
    t66:? = @and(t60,t61);
    t67:? = @and(t66,t63);  // <-t63
    t68:? = @and(t64,t65);
    t69:? = @geq(t6,1:i64);
    t70:? = @leq(t6,15:i64);
    t71:? = @and(t69,t70);
    t72:? = @eq(t4,`"Brand#34":sym);
    t73:? = `"LG CASE"`"LG BOX"`"LG PACK"`"LG PKG":sym;
    t74:? = @member(t73,t7);
    t75:? = @geq(t35,20:f64);
    t76:? = @leq(t35,30:f64);
    t77:? = @and(t71,t72);
    t78:? = @and(t77,t74);  // <-t74
    t79:? = @and(t75,t76);
    // --- line ----
    //t80:? = @or(t56,t67);
    //t81:? = @or(t80,t78);   // p_
    k0:? = @compress(t56, t1);
    k1:? = @compress(t67, t1);
    k2:? = @compress(t78, t1);
    //t82:? = @or(t57,t68);
    //t83:? = @or(t82,t79);   // l_
    k3:? = @member(k0, t32);
    k4:? = @member(k1, t32);
    k5:? = @member(k2, t32);
    k6:? = @and(k3, t57);
    k7:? = @and(k4, t68);
    k8:? = @and(k5, t79);
    k9:? = @or(k6, k7);
    k10:? = @or(k9, k8);
    t128:? = @compress(k10,t36);
    t129:? = @compress(k10,t37);
    //k0:? = @sum(t57);
    //k0:? = @sum(t68);
    //k0:? = @sum(t79);
    //k0:? = @sum(t82);
    //k0:? = @sum(t83);
    //t84:? = @compress(t81,t1);
    //t94:? = @compress(t83,t32);
    //t98:? = @compress(t83,t36);
    //t99:? = @compress(t83,t37);
    //t109:? = @member(t84,t94);
    //t128:? = @compress(t109,t98);
    //t129:? = @compress(t109,t99);
    t139:? = @minus(1:i64,t129);
    t140:? = @mul(t128,t139);
    t141:? = @sum(t140);
    t142:? = `revenue:sym;
    t143:? = @enlist(t141);
    t144:? = @table(t142,t143);
    return t144;
  }
}
